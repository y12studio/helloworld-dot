/**
 * Substrate API Sidecar v1.
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PeerInfo model module.
 * @module model/PeerInfo
 * @version 1.0.0-oas3
 */
class PeerInfo {
    /**
     * Constructs a new <code>PeerInfo</code>.
     * @alias module:model/PeerInfo
     */
    constructor() { 
        
        PeerInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PeerInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeerInfo} obj Optional instance to populate.
     * @return {module:model/PeerInfo} The populated <code>PeerInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeerInfo();

            if (data.hasOwnProperty('peerId')) {
                obj['peerId'] = ApiClient.convertToType(data['peerId'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], 'String');
            }
            if (data.hasOwnProperty('protocolVersion')) {
                obj['protocolVersion'] = ApiClient.convertToType(data['protocolVersion'], 'String');
            }
            if (data.hasOwnProperty('bestHash')) {
                obj['bestHash'] = ApiClient.convertToType(data['bestHash'], 'String');
            }
            if (data.hasOwnProperty('bestNumber')) {
                obj['bestNumber'] = ApiClient.convertToType(data['bestNumber'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Peer ID.
 * @member {String} peerId
 */
PeerInfo.prototype['peerId'] = undefined;

/**
 * Roles the peer is running
 * @member {String} roles
 */
PeerInfo.prototype['roles'] = undefined;

/**
 * Peer's protocol version.
 * @member {String} protocolVersion
 */
PeerInfo.prototype['protocolVersion'] = undefined;

/**
 * Hash of the best block on the peer's canon chain.
 * @member {String} bestHash
 */
PeerInfo.prototype['bestHash'] = undefined;

/**
 * Height of the best block on the peer's canon chain.
 * @member {String} bestNumber
 */
PeerInfo.prototype['bestNumber'] = undefined;






export default PeerInfo;

