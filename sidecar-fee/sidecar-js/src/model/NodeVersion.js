/**
 * Substrate API Sidecar v1.
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodeVersion model module.
 * @module model/NodeVersion
 * @version 1.0.0-oas3
 */
class NodeVersion {
    /**
     * Constructs a new <code>NodeVersion</code>.
     * Version information of the node.
     * @alias module:model/NodeVersion
     */
    constructor() { 
        
        NodeVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeVersion} obj Optional instance to populate.
     * @return {module:model/NodeVersion} The populated <code>NodeVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeVersion();

            if (data.hasOwnProperty('clientVersion')) {
                obj['clientVersion'] = ApiClient.convertToType(data['clientVersion'], 'String');
            }
            if (data.hasOwnProperty('clientImplName')) {
                obj['clientImplName'] = ApiClient.convertToType(data['clientImplName'], 'String');
            }
            if (data.hasOwnProperty('chain')) {
                obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Node's binary version.
 * @member {String} clientVersion
 */
NodeVersion.prototype['clientVersion'] = undefined;

/**
 * Node's implementation name.
 * @member {String} clientImplName
 */
NodeVersion.prototype['clientImplName'] = undefined;

/**
 * Node's chain name.
 * @member {String} chain
 */
NodeVersion.prototype['chain'] = undefined;






export default NodeVersion;

