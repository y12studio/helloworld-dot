/**
 * Substrate API Sidecar v1.
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UnappliedSlash model module.
 * @module model/UnappliedSlash
 * @version 1.0.0-oas3
 */
class UnappliedSlash {
    /**
     * Constructs a new <code>UnappliedSlash</code>.
     * @alias module:model/UnappliedSlash
     */
    constructor() { 
        
        UnappliedSlash.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UnappliedSlash</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UnappliedSlash} obj Optional instance to populate.
     * @return {module:model/UnappliedSlash} The populated <code>UnappliedSlash</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UnappliedSlash();

            if (data.hasOwnProperty('validator')) {
                obj['validator'] = ApiClient.convertToType(data['validator'], 'String');
            }
            if (data.hasOwnProperty('own')) {
                obj['own'] = ApiClient.convertToType(data['own'], 'String');
            }
            if (data.hasOwnProperty('others')) {
                obj['others'] = ApiClient.convertToType(data['others'], ['String']);
            }
            if (data.hasOwnProperty('reporters')) {
                obj['reporters'] = ApiClient.convertToType(data['reporters'], ['String']);
            }
            if (data.hasOwnProperty('payout')) {
                obj['payout'] = ApiClient.convertToType(data['payout'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Stash account ID of the offending validator.
 * @member {String} validator
 */
UnappliedSlash.prototype['validator'] = undefined;

/**
 * The amount the validator will be slashed.
 * @member {String} own
 */
UnappliedSlash.prototype['own'] = undefined;

/**
 * Array of tuples(`[accountId, amount]`) representing all the stashes of other slashed stakers and the amount they will be slashed.
 * @member {Array.<String>} others
 */
UnappliedSlash.prototype['others'] = undefined;

/**
 * Array of account IDs of the reporters of the offense.
 * @member {Array.<String>} reporters
 */
UnappliedSlash.prototype['reporters'] = undefined;

/**
 * Amount of bounty payout to reporters.
 * @member {String} payout
 */
UnappliedSlash.prototype['payout'] = undefined;






export default UnappliedSlash;

