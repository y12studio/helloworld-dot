/**
 * Substrate API Sidecar v1.
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlockIdentifiers from './BlockIdentifiers';
import PalletStorageItemMetadata from './PalletStorageItemMetadata';

/**
 * The PalletStorageItem model module.
 * @module model/PalletStorageItem
 * @version 1.0.0-oas3
 */
class PalletStorageItem {
    /**
     * Constructs a new <code>PalletStorageItem</code>.
     * @alias module:model/PalletStorageItem
     */
    constructor() { 
        
        PalletStorageItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PalletStorageItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PalletStorageItem} obj Optional instance to populate.
     * @return {module:model/PalletStorageItem} The populated <code>PalletStorageItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PalletStorageItem();

            if (data.hasOwnProperty('at')) {
                obj['at'] = BlockIdentifiers.constructFromObject(data['at']);
            }
            if (data.hasOwnProperty('pallet')) {
                obj['pallet'] = ApiClient.convertToType(data['pallet'], 'String');
            }
            if (data.hasOwnProperty('palletIndex')) {
                obj['palletIndex'] = ApiClient.convertToType(data['palletIndex'], 'String');
            }
            if (data.hasOwnProperty('storageItem')) {
                obj['storageItem'] = ApiClient.convertToType(data['storageItem'], 'String');
            }
            if (data.hasOwnProperty('key1')) {
                obj['key1'] = ApiClient.convertToType(data['key1'], 'String');
            }
            if (data.hasOwnProperty('key2')) {
                obj['key2'] = ApiClient.convertToType(data['key2'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = PalletStorageItemMetadata.constructFromObject(data['metadata']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/BlockIdentifiers} at
 */
PalletStorageItem.prototype['at'] = undefined;

/**
 * Name of the pallet.
 * @member {String} pallet
 */
PalletStorageItem.prototype['pallet'] = undefined;

/**
 * Index of the pallet for looking up storage.
 * @member {String} palletIndex
 */
PalletStorageItem.prototype['palletIndex'] = undefined;

/**
 * Name of the storage item.
 * @member {String} storageItem
 */
PalletStorageItem.prototype['storageItem'] = undefined;

/**
 * Key1 query param. Will not show up in response unless it was passed as part of the URI.
 * @member {String} key1
 */
PalletStorageItem.prototype['key1'] = undefined;

/**
 * Key2 query param. Will not show up in response if not defined in URI.
 * @member {String} key2
 */
PalletStorageItem.prototype['key2'] = undefined;

/**
 * Value returned by this storage query.
 * @member {Object} value
 */
PalletStorageItem.prototype['value'] = undefined;

/**
 * @member {module:model/PalletStorageItemMetadata} metadata
 */
PalletStorageItem.prototype['metadata'] = undefined;






export default PalletStorageItem;

