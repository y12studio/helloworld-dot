/**
 * Substrate API Sidecar v1.
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountStakingPayoutsErasPayouts model module.
 * @module model/AccountStakingPayoutsErasPayouts
 * @version 1.0.0-oas3
 */
class AccountStakingPayoutsErasPayouts {
    /**
     * Constructs a new <code>AccountStakingPayoutsErasPayouts</code>.
     * @alias module:model/AccountStakingPayoutsErasPayouts
     */
    constructor() { 
        
        AccountStakingPayoutsErasPayouts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountStakingPayoutsErasPayouts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountStakingPayoutsErasPayouts} obj Optional instance to populate.
     * @return {module:model/AccountStakingPayoutsErasPayouts} The populated <code>AccountStakingPayoutsErasPayouts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountStakingPayoutsErasPayouts();

            if (data.hasOwnProperty('era')) {
                obj['era'] = ApiClient.convertToType(data['era'], 'String');
            }
            if (data.hasOwnProperty('totalEraRewardPoints')) {
                obj['totalEraRewardPoints'] = ApiClient.convertToType(data['totalEraRewardPoints'], 'String');
            }
            if (data.hasOwnProperty('totalEraPayout')) {
                obj['totalEraPayout'] = ApiClient.convertToType(data['totalEraPayout'], 'String');
            }
            if (data.hasOwnProperty('payouts')) {
                obj['payouts'] = ApiClient.convertToType(data['payouts'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * Era this information is associated with.
 * @member {String} era
 */
AccountStakingPayoutsErasPayouts.prototype['era'] = undefined;

/**
 * Total reward points for the era. Equals the sum of reward points for all the validators in the set.
 * @member {String} totalEraRewardPoints
 */
AccountStakingPayoutsErasPayouts.prototype['totalEraRewardPoints'] = undefined;

/**
 * Total payout for the era. Validators split the payout based on the portion of `totalEraRewardPoints` they have.
 * @member {String} totalEraPayout
 */
AccountStakingPayoutsErasPayouts.prototype['totalEraPayout'] = undefined;

/**
 * @member {Array.<Object>} payouts
 */
AccountStakingPayoutsErasPayouts.prototype['payouts'] = undefined;






export default AccountStakingPayoutsErasPayouts;

