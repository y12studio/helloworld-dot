/*
 * Substrate API Sidecar v1.
 *
 * Substrate API Sidecar is a REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransactionMaterial : Note: `chainName`, `specName`, and `specVersion` are used to define a type registry with a set of signed extensions and types. For Polkadot and Kusama, `chainName` is not used in defining this registry, but in other Substrate-based chains that re-launch their network without changing the `specName`, the `chainName` would be needed to create the correct registry. Substrate Reference: - `RuntimeVersion`: https://crates.parity.io/sp_version/struct.RuntimeVersion.html - `SignedExtension`: https://crates.parity.io/sp_runtime/traits/trait.SignedExtension.html -  FRAME Support: https://crates.parity.io/frame_support/metadata/index.html



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionMaterial {
    #[serde(rename = "at", skip_serializing_if = "Option::is_none")]
    pub at: Option<crate::models::BlockIdentifiers>,
    /// The hash of the chain's genesis block.
    #[serde(rename = "genesisHash", skip_serializing_if = "Option::is_none")]
    pub genesis_hash: Option<String>,
    /// The chain's name.
    #[serde(rename = "chainName", skip_serializing_if = "Option::is_none")]
    pub chain_name: Option<String>,
    /// The chain's spec.
    #[serde(rename = "specName", skip_serializing_if = "Option::is_none")]
    pub spec_name: Option<String>,
    /// The spec version. Always increased in a runtime upgrade.
    #[serde(rename = "specVersion", skip_serializing_if = "Option::is_none")]
    pub spec_version: Option<String>,
    /// The transaction version. Common `txVersion` numbers indicate that the transaction encoding format and method indices are the same. Needed for decoding in an offline environment. Adding new transactions does not change `txVersion`.
    #[serde(rename = "txVersion", skip_serializing_if = "Option::is_none")]
    pub tx_version: Option<String>,
    /// The chain's metadata in hex format.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<String>,
}

impl TransactionMaterial {
    /// Note: `chainName`, `specName`, and `specVersion` are used to define a type registry with a set of signed extensions and types. For Polkadot and Kusama, `chainName` is not used in defining this registry, but in other Substrate-based chains that re-launch their network without changing the `specName`, the `chainName` would be needed to create the correct registry. Substrate Reference: - `RuntimeVersion`: https://crates.parity.io/sp_version/struct.RuntimeVersion.html - `SignedExtension`: https://crates.parity.io/sp_runtime/traits/trait.SignedExtension.html -  FRAME Support: https://crates.parity.io/frame_support/metadata/index.html
    pub fn new() -> TransactionMaterial {
        TransactionMaterial {
            at: None,
            genesis_hash: None,
            chain_name: None,
            spec_name: None,
            spec_version: None,
            tx_version: None,
            metadata: None,
        }
    }
}


